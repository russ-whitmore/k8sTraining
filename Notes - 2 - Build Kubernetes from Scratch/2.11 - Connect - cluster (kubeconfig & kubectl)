## Connecting to the cluster 

Kubeconfig and Kubectl - Connect to cluster 
How do we access the cluster once configured?
    API server is the entry point
    Kubeadm generated client certificate we can use
    And kubeconfig file - API server address, client certificate and client private key 

Kubeconfig is file we will use to connect to cluster
    Kubectl will give us commands to connect to cluster
    Kubeconfig will allow us to authenticate with the cluster 

Commands -
    Kubectl get node - will get errors because we need to specify host or port
    In order to do that, we specify the kubeconfig file which gives us all the keys and addresses 
    Command to run - Sudo kubectl get node --kubeconfig /etc/kubernetes/admin.conf

Kubeconfig contents
    Command to run - sudo vim /etc/kubernetes/admin.conf
    Can copy contents are open in VS code - it's a manifest file 
    We'll see lists of clusters, endpoint/Private IP address of master node 
    Certificate authority data - the client will need to include that in the request (this is in the conf file)
    Users - we see the k8s admin Users
        Client cert and client key
        Contexts - used to group access parameters under a convenient name
        By default - kubectl CLI uses the current-context to communicate with the cluster 
        If we had multiple clusters and multiple users we can switch between users using the context section.
        We use context to choose which cluster we want to connect to from the clusters list and
        Use one of the users from the users list 

Referencing Kubeconfig file 
    Needing to specify kubeconfig on every kubectl command and with sudo is repetitive and slows us down
    To avoid - set kubeconfig file location as an env variable 
        Switch to root user:
            sudo -i
            export kubeconfig=/etc/kubernetes/admin.conf 
            can now reference but will only work in the current session so we need to keep resetting
    
    Better alternative - take file and put in default location where kubectl will look for it
        Command:
        ~/.kube is preferred default folder, however we don't have it yet
        Create folder:
            mkdir -p ~/.kube
            sudo cp -i /etc/kubernetes/admin.conf ~/.kube/config 
            ls -l ~/.kube/config 
            echo $(id -u)
            echo $(id -g)
            sudo chown $(id -u):$(id -g) ~/.kube/config 
            ls -l ~/.kube/config 
        Results - will no longer need to use sudo or specify a config file for kubeconfig 



